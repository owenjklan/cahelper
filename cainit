#!/usr/bin/env python3
import os
import time
import subprocess
from subprocess import check_call, CalledProcessError

from jinja2 import Template

from dialogs import (get_country_code, get_key_size, dialog_input,
    msgbox, yesno, error_and_exit,)


def generate_ca_openssl_config(values):
    """
    Generate the OpenSSL config file to be used with the openssl 'ca'
    command.
    """
    template = Template(open("../ca_openssl_config.j2", "r").read())
    rendered = template.render(values)
    return rendered


def generate_ca_cert_config(values):
    """
    Generate the CA's certificate, that will be used for signing
    other certificates.
    """
    template = Template(open("../ca_cert_config.j2", "r").read())
    rendered = template.render(values)
    return rendered


def get_and_confirm_ca_name():
    while True:
        name = dialog_input("Enter a name for the CA")
        ca_name = name.strip().replace(' ', '_').lower() + "_ca"
        name_okay = yesno((
        "The new CA will be based in the following directory:\n\n"
            "  {}\n\n"
            "Is this okay?".format(ca_name)))
        if name_okay == "ok":
            return (name, ca_name)


def generate_rsa_key(keysize, filename):
    cmd = [
        "openssl", "genrsa", "-out", filename, keysize
    ]
    try:
        check_call(cmd)
    except CalledProcessError as cpe:
        error_and_exit("Failure generating RSA key!")


def generate_ca_cert(confname, keyfile, outname):
    cmd = [
        "openssl", "req", "-new", "-x509",
        "-config", confname, "-key", keyfile, "-out", outname
    ]
    try:
        check_call(cmd)
    except CalledProcessError as cpe:
        error_and_exit("Failure creating CA key and cert!")


def init_ca_directory(dirname):
    os.mkdir(dirname)
    os.chdir(dirname)
    os.mkdir("newcerts")
    index = open("index.txt", "w")
    index.close()
    with open("serial", "w") as serial:
        serial.write(str(time.time()).split('.')[0])


def main():
    values = {}

    ca_name_original, ca_disk_name = get_and_confirm_ca_name()
    values['ca_name'] = ca_disk_name

    init_ca_directory(ca_disk_name)
    values['ca_key_size'] = get_key_size()
    values['ca_priv_filename'] = dialog_input(
        "Name of CA Private Key file",
        initial=values['ca_name'] + ".key")
    generate_rsa_key(values['ca_key_size'], values['ca_priv_filename'])

    values['dn_country'] = get_country_code()
    values['dn_state'] = dialog_input("State", initial="Queensland")
    values['dn_locality'] = dialog_input("Locality", initial="Brisbane")
    values['dn_org'] = dialog_input("Organisation")
    values['dn_org_unit'] = dialog_input("Organisational Unit")
    values['dn_cn'] = dialog_input(
        "Common Name", initial=ca_name_original + " CA")
    ca_conf_name = values['ca_name'] + ".conf"
    with open(ca_conf_name, "w") as conffile:
        conffile.write(generate_ca_cert_config(values))

    generate_ca_cert(
        ca_conf_name,
        values['ca_priv_filename'],
        ca_disk_name + ".crt",
    )


if __name__ == '__main__':
    main()
